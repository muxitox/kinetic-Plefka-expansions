J normalization:

        self.J = np.ones((self.size, self.size)) * 1/self.size


Seed: [3813]. Original size: 6. Visible units: 3. O. Simulation steps: 500. F. Simulation steps: 2000. eta: 0.01. max_reps: 6500 
Final MSE m 1.3143913333333332 C 0.10434975693874071 D 0.0393096216054074


%%%%%%%%%


Seed: [3813]. Original size: 8. Visible units: 5. O. Simulation steps: 500. F. Simulation steps: 2000. eta: 0.01. max_reps: 6500 
Final MSE m 0.6106152666666667 C 0.08870686053721333 D 0.019367571137213338

%%%%%%%%%

Seed: [3813]. Original size: 10. Visible units: 5. O. Simulation steps: 500. F. Simulation steps: 2000. eta: 0.01. max_reps: 6500 
Final MSE m 0.0005203999999999993 C 0.10948992363559996 D 0.0036650093689333317


%%%%%

Seed: [3813]. Original size: 10. Visible units: 6. O. Simulation steps: 500. F. Simulation steps: 2000. eta: 0.01. max_reps: 6500 
Final MSE m 0.00036955555555555505 C 0.11980130941172222 D 0.0044162686524629605

%%%%%%%

Seed: [3813]. Original size: 10. Visible units: 7. O. Simulation steps: 500. F. Simulation steps: 2000. eta: 0.01. max_reps: 6500 
Final MSE m 0.0006958571428571427 C 0.08942018213480951 D 0.004111634835489796
